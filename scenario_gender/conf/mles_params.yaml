defaults:
  - _self_
  - inference/default
  - inference/seq_encoder/pretrained

seed_everything: 42
logger_name: mles_model
model_path: models/mles_model.p
embed_file_name: mles_embeddings

data_module:
  _target_: ptls.data_load.data_module.coles_data_module.ColesDataModuleTrain
  type: map
  setup: 
    col_id: customer_id
    dataset_files: 
      data_path: ${hydra:runtime.cwd}/data/train_trx.parquet
    split_by: files
    valid_size: 0.05
    valid_split_seed: 42
  train: 
    min_seq_len: 25
    split_strategy: 
      split_strategy: SampleSlices
      split_count: 5
      cnt_min: 15
      cnt_max: 75
    trx_dropout: 0.01
    num_workers: 8
    batch_size: 128
    augmentations: 
      - 
        - DropoutTrx
        - 
          trx_dropout: 0.01
  valid: 
    split_strategy: 
      split_strategy: SampleSlices
      split_count: 5
      cnt_min: 25
      cnt_max: 100
    num_workers: 16
    batch_size: 1024
    augmentations: []

trainer: 
  gpus: 1
  auto_select_gpus: false
  max_epochs: 150
  enable_checkpointing: false
  deterministic: true

pl_module:
  _target_: ptls.frames.coles.CoLESModule
  validation_metric:
    _target_: ptls.frames.coles.metric.BatchRecallTopK
    K: 4
    metric: cosine
  seq_encoder:
    _target_: ptls.nn.RnnSeqEncoder
    trx_encoder: 
      _target_: ptls.nn.TrxEncoder
      norm_embeddings: false
      embeddings_noise: 0.003
      embeddings:
        mcc_code:
          in: 200
          out: 48
        tr_type:
          in: 100
          out: 24
      numeric_values: 
        amount: identity
    type: gru
    hidden_size: 1024
    bidir: false
    trainable_starter: static
  head:
    _target_: ptls.nn.Head
    use_norm_encoder: true
    input_size: ${pl_module.seq_encoder.hidden_size}
  loss:
    _target_: ptls.frames.coles.losses.ContrastiveLoss
    margin: 0.5
    sampling_strategy:
      _target_: ptls.frames.coles.sampling_strategies.HardNegativePairSelector
      neg_count: 5
  lr_scheduler_partial:
    _partial_: true
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 10
    gamma: 0.9025
  optimizer_partial:
    _partial_: true
    _target_: torch.optim.Adam
    lr: 0.002
    weight_decay: 0.0
